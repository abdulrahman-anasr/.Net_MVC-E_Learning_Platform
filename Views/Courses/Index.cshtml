@model MvcE_Learning.Models.CourseViewModel

@{
    ViewData["Title"] = "Browse Courses";
    var role = Context.Request.Cookies["Role"];
    var name = Context.Request.Cookies["Name"];
    var id = Context.Request.Cookies["Id"];
}

<div class="container py-5">
    <div class="row mb-4">
        <div class="col-12">
            <h1 class="display-5 fw-bold gradient-text mb-4">Browse Our Courses</h1>
            <p class="lead text-muted">Discover the perfect learning path for your goals</p>
        </div>
    </div>

    <div class="card shadow-sm mb-5">
        <div class="card-body p-4">
            <form asp-controller="Courses" asp-action="Index" method="get" class="row g-3 align-items-end">
                <div class="col-md-4">
                    <label class="form-label fw-bold">Filter by Field</label>
                    <select asp-for="CourseFields" asp-items="Model.Fields" class="form-select">
                        <option value="">All Fields</option>
                    </select>
                </div>
                <div class="col-md-5">
                    <label class="form-label fw-bold">Search Courses</label>
                    <div class="input-group">
                        <span class="input-group-text bg-transparent"><i class="fas fa-search"></i></span>
                        <input type="text" asp-for="SearchString" class="form-control" placeholder="Search by course name...">
                    </div>
                </div>
                <div class="col-md-3">
                    <button type="submit" class="btn btn-primary w-100">
                        <i class="fas fa-filter me-2"></i> Apply Filters
                    </button>
                </div>
            </form>
        </div>
    </div>

    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
        @foreach (var item in Model.Course!)
        {
            <div class="col">
                <div class="card h-100 border-0 shadow-sm course-card animate__animated animate__fadeIn">
                    <div class="card-header bg-primary bg-opacity-10 py-3">
                        <h5 class="card-title mb-0 fw-bold">@Html.DisplayFor(modelItem => item.Name)</h5>
                    </div>
                    <div class="card-body">
                        <p class="card-text text-muted mb-3">@Html.DisplayFor(modelItem => item.Description)</p>

                        <div class="d-flex flex-wrap gap-2 mb-3">
                            <span class="badge bg-primary bg-opacity-10 text-primary">
                                <i class="fas fa-clock me-1"></i> @Html.DisplayFor(modelItem => item.Duration)
                            </span>
                            <span class="badge bg-warning bg-opacity-10 text-warning">
                                <i class="fas fa-signal me-1"></i> @Html.DisplayFor(modelItem => item.Difficulty)
                            </span>
                            <span class="badge bg-info bg-opacity-10 text-info">
                                <i class="fas fa-tag me-1"></i> @Html.DisplayFor(modelItem => item.Fields)
                            </span>
                        </div>

                        <div class="d-flex align-items-center mb-3">
                            <div class="rating-stars me-2">
                                @for (int i = 0; i < 5; i++)
                                {
                                    if (i < Math.Floor(item.Rating))
                                    {
                                        <i class="fas fa-star text-warning"></i>
                                    }
                                    else if (i < item.Rating)
                                    {
                                        <i class="fas fa-star-half-alt text-warning"></i>
                                    }
                                    else
                                    {
                                        <i class="far fa-star text-warning"></i>
                                    }
                                }
                            </div>
                            <small class="text-muted">@item.Rating.ToString("0.0")</small>
                        </div>
                    </div>
                    <div class="card-footer bg-transparent border-0 pt-0 pb-3">
                        @if (role == "Student")
                        {
                            <a asp-controller="Students" asp-action="Enroll" asp-route-id="@item.CourseId"
                               class="btn btn-primary w-100">
                                <i class="fas fa-book-open me-2"></i> Enroll Now
                            </a>
                        }
                        else if (string.IsNullOrEmpty(role))
                        {
                            <a asp-controller="Home" asp-action="LoginPageOption"
                               class="btn btn-outline-primary w-100">
                                <i class="fas fa-sign-in-alt me-2"></i> Login to Enroll
                            </a>
                        }
                    </div>
                </div>
            </div>
        }
    </div>

    @if (!Model.Course.Any())
    {
        <div class="text-center py-5">
            <img src="https://cdn-icons-png.flaticon.com/512/4076/4076478.png" width="120" class="mb-4 opacity-50">
            <h4 class="fw-bold">No courses found</h4>
            <p class="text-muted">Try adjusting your search filters</p>
            <a asp-controller="Courses" asp-action="Index" class="btn btn-primary mt-3">
                <i class="fas fa-undo me-2"></i> Reset Filters
            </a>
        </div>
    }
</div>

<style>
    .course-card {
        transition: all 0.3s ease;
        border-radius: 0.75rem;
        overflow: hidden;
    }

        .course-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
        }

    .rating-stars {
        font-size: 0.9rem;
    }

    .badge {
        border-radius: 0.5rem;
        padding: 0.35rem 0.65rem;
        font-weight: 500;
    }

    .card-header {
        border-bottom: none;
    }

    .form-select, .form-control {
        border-radius: 0.5rem;
        padding: 0.5rem 1rem;
        border: 1px solid #dee2e6;
    }

        .form-select:focus, .form-control:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 0.25rem rgba(67, 97, 238, 0.25);
        }
</style>

@section Scripts {
    <script>
        // Add animation to course cards as they come into view
        document.addEventListener('DOMContentLoaded', function () {
            const animateCards = function () {
                const cards = document.querySelectorAll('.course-card');
                cards.forEach((card, index) => {
                    const cardPosition = card.getBoundingClientRect().top;
                    const screenPosition = window.innerHeight / 1.3;

                    if (cardPosition < screenPosition) {
                        card.style.animationDelay = `${index * 0.1}s`;
                        card.classList.add('animate__fadeInUp');
                    }
                });
            };

            window.addEventListener('scroll', animateCards);
            animateCards(); // Run once on page load
        });
    </script>
}